import sys
import os
sys.path.append(os.path.abspath(os.path.join('AFD/AFN/parsers')))
from Automata import Automata
from Transition import Transition

automata = Automata([],['a', 'b', 'c', 'A', 'B', 'C', '0', '1', '2', 'Î¶', 'D', 'E', 'F', 'H', '+', '-'], Transition([0, 1, 2, 3, 4, 5, 6, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 43, 44, 49, 50], 'a',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], {'ident': 21})
, [Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], None,None, {'number': 48})
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], None,None, {'number': 48})
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], None,None, {'number': 48})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([41], None,None, {'hexnumber': 41})
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], None,None, {'number': 48})
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], None,None, {'number': 48})
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], None,None, {'number': 48})
, Transition([41], None,None, {'hexnumber': 41})
, Transition([41], None,None, {'hexnumber': 41})
, Transition([56, 57, 54, 55], None,None, {'signnumber': 57})
, Transition([56, 57, 54, 55], None,None, {'signnumber': 57})
, Transition([56, 57, 54, 55], None,None, {'signnumber': 57})
, Transition([56, 57, 54, 55], None,None, {'signnumber': 57})
, Transition([56, 57, 54, 55], None,None, {'signnumber': 57})
, Transition([56, 57, 54, 55], None,None, {'signnumber': 57})
], [Transition([0, 1, 2, 3, 4, 5, 6, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 43, 44, 49, 50], 'a',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], {'ident': 21})
, Transition([0, 1, 2, 3, 4, 5, 6, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 43, 44, 49, 50], 'b',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], {'ident': 21})
, Transition([0, 1, 2, 3, 4, 5, 6, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 43, 44, 49, 50], 'c',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], {'ident': 21})
, Transition([0, 1, 2, 3, 4, 5, 6, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 43, 44, 49, 50], 'A',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], {'ident': 21})
, Transition([0, 1, 2, 3, 4, 5, 6, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 43, 44, 49, 50], 'B',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], {'ident': 21})
, Transition([0, 1, 2, 3, 4, 5, 6, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 43, 44, 49, 50], 'C',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], {'ident': 21})
, Transition([0, 1, 2, 3, 4, 5, 6, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 43, 44, 49, 50], '0',[32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], {'number': 48})
, Transition([0, 1, 2, 3, 4, 5, 6, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 43, 44, 49, 50], '1',[32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], {'number': 48})
, Transition([0, 1, 2, 3, 4, 5, 6, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 43, 44, 49, 50], '2',[32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], {'number': 48})
, Transition([0, 1, 2, 3, 4, 5, 6, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 43, 44, 49, 50], 'D',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([0, 1, 2, 3, 4, 5, 6, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 43, 44, 49, 50], 'E',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([0, 1, 2, 3, 4, 5, 6, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 43, 44, 49, 50], 'F',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([0, 1, 2, 3, 4, 5, 6, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 43, 44, 49, 50], '+',[51, 52, 53], None)
, Transition([0, 1, 2, 3, 4, 5, 6, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 42, 43, 44, 49, 50], '-',[51, 52, 53], None)
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], 'a',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], 'b',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], 'c',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], 'A',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], 'B',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], 'C',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], '0',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], '1',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], '2',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], 'a',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], 'b',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], 'c',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], 'A',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], 'B',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], 'C',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], '0',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], '1',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], '2',[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], 'D',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], 'E',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], 'F',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], 'H',[41], {'hexnumber': 41})
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], 'A',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], 'B',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], 'C',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], '0',[32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], {'number': 48})
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], '1',[32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], {'number': 48})
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], '2',[32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], {'number': 48})
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], 'D',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], 'E',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], 'F',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], 'H',[41], {'hexnumber': 41})
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 31], 'A',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 31], 'B',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 31], 'C',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 31], '0',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 31], '1',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 31], '2',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 31], 'D',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 31], 'E',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 31], 'F',[32, 33, 34, 35, 36, 37, 38, 39, 40, 31], None)
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 31], 'H',[41], {'hexnumber': 41})
, Transition([51, 52, 53], '0',[56, 57, 54, 55], {'signnumber': 57})
, Transition([51, 52, 53], '1',[56, 57, 54, 55], {'signnumber': 57})
, Transition([51, 52, 53], '2',[56, 57, 54, 55], {'signnumber': 57})
, Transition([56, 57, 54, 55], '0',[56, 57, 54, 55], {'signnumber': 57})
, Transition([56, 57, 54, 55], '1',[56, 57, 54, 55], {'signnumber': 57})
, Transition([56, 57, 54, 55], '2',[56, 57, 54, 55], {'signnumber': 57})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], None,None, {'number': 48})
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], None,None, {'number': 48})
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], None,None, {'number': 48})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], None,None, {'ident': 21})
, Transition([41], None,None, {'hexnumber': 41})
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], None,None, {'number': 48})
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], None,None, {'number': 48})
, Transition([32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 31], None,None, {'number': 48})
, Transition([41], None,None, {'hexnumber': 41})
, Transition([41], None,None, {'hexnumber': 41})
, Transition([56, 57, 54, 55], None,None, {'signnumber': 57})
, Transition([56, 57, 54, 55], None,None, {'signnumber': 57})
, Transition([56, 57, 54, 55], None,None, {'signnumber': 57})
, Transition([56, 57, 54, 55], None,None, {'signnumber': 57})
, Transition([56, 57, 54, 55], None,None, {'signnumber': 57})
, Transition([56, 57, 54, 55], None,None, {'signnumber': 57})
])



f = open('test.txt', 'r')
def reader_tester():
    x = f.read()
    response = []
    r = automata.simulate_DFA(None, x[0])
    tokens = []
    x=x[1:]
    for c in x:
        if r:
            response.append(r)
            r = automata.simulate_DFA(response[-1], c)
            
        elif not r and len(response) > 0:
            tokens.append(response.pop())
            print("finished token", response)
            r= automata.simulate_DFA(None, c)

        else:
            break
    

    if r:
        response.append(r)
        r = automata.simulate_DFA(response[-1], c)
        
    elif not r and len(response) > 0:
        tokens.append(response.pop())
        r= automata.simulate_DFA(None, c)
        tokens.append(r)

    else: 
        print("No tokens.")
    if len(tokens) == 0 and len(response) > 0:
        tokens.append(response.pop())
    print("Finished", tokens)

    return tokens
    

def token_print(tokens):
    for token in tokens:
        name = token.type.keys()
        name = list(name)
        print(f"<Token w/id: {name}>")

x = reader_tester()
token_print(x)